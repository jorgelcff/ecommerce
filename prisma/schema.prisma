generator client {
  provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String
  password String
  telefone String
  role     Role     @default(USER)
  // role     String     @default("USER")
  carts    Cart[]
  orders   Order[]
  messages Message[]
}

model Cart {
  id        String         @id @default(uuid())
  userId    String
  user      User           @relation(fields: [userId], references: [id])
  products  CartProduct[]
  createdAt DateTime       @default(now())
}

model CartProduct {
  id       String @id @default(uuid())
  cartId   String
  productId String
  cart     Cart   @relation(fields: [cartId], references: [id])
  product  Product @relation(fields: [productId], references: [id])
  quantity Int     @default(1)
}

model Order {
  id        String          @id @default(uuid())
  userId    String
  user      User            @relation(fields: [userId], references: [id])
  address   String
  total     Float
  status    OrderStatus      @default(PENDING)
  //  status    String      @default("PENDING")
  products  OrderProduct[]
  createdAt DateTime         @default(now())
}

model OrderProduct {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int     @default(1)
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String
  image       String
  price       Float
  stock       Int            @default(0)
  categoryId  String
  category    Category       @relation(fields: [categoryId], references: [id])
  cartProducts CartProduct[]
  orderProducts OrderProduct[]
}

model Category {
  id       String     @id @default(uuid())
  name     String
  products Product[]
}

model Message {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  text      String
  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}

enum Role {
  ADMIN
  USER
}
